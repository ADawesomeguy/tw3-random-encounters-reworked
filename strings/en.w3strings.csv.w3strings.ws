
// autogenerated tests for w3strings (require modBase-Utils)
// language: en

function _test_verifyW3strings() : int {
    var failed: int;
    failed = 0;

    // test by id
    if (!assertTrue(GetLocStringById(2115018001) == "Defaults", "w3string.byId: 2115018001")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018002) == "Minimum delay during the day (in seconds)", "w3string.byId: 2115018002")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018003) == "Maximum delay during the day (in seconds)", "w3string.byId: 2115018003")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018004) == "Minimum delay during the night (in seconds)", "w3string.byId: 2115018004")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018005) == "Maximum delay during the night (in seconds)", "w3string.byId: 2115018005")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018006) == "Low", "w3string.byId: 2115018006")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018007) == "Medium", "w3string.byId: 2115018007")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018008) == "High", "w3string.byId: 2115018008")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018009) == "Mods", "w3string.byId: 2115018009")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018010) == "Random Encounters Reworked", "w3string.byId: 2115018010")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018011) == "Main settings", "w3string.byId: 2115018011")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018012) == "Enable city spawns", "w3string.byId: 2115018012")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018013) == "Yes", "w3string.byId: 2115018013")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018014) == "No", "w3string.byId: 2115018014")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018015) == "Encounters difficulty (affects mostly enemy count)", "w3string.byId: 2115018015")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018016) == "Easy", "w3string.byId: 2115018016")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018017) == "Medium", "w3string.byId: 2115018017")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018018) == "Hard", "w3string.byId: 2115018018")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018019) == "Monster hunt frequency", "w3string.byId: 2115018019")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018020) == "Encounter types", "w3string.byId: 2115018020")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018021) == "Creatures frequencies", "w3string.byId: 2115018021")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018022) == "Creatures ratios", "w3string.byId: 2115018022")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018023) == "Creatures ratios - Day", "w3string.byId: 2115018023")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018024) == "Creatures ratios - Night", "w3string.byId: 2115018024")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018025) == "Everything OFF", "w3string.byId: 2115018025")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018026) == "Everything ON", "w3string.byId: 2115018026")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018027) == "Leshen", "w3string.byId: 2115018027")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018028) == "Werewolf", "w3string.byId: 2115018028")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018029) == "Cyclop", "w3string.byId: 2115018029")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018030) == "Arachas", "w3string.byId: 2115018030")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018031) == "Fiend", "w3string.byId: 2115018031")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018032) == "Chort", "w3string.byId: 2115018032")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018033) == "Vampire", "w3string.byId: 2115018033")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018034) == "Bear", "w3string.byId: 2115018034")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018035) == "Golem", "w3string.byId: 2115018035")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018036) == "Elemental", "w3string.byId: 2115018036")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018037) == "NightWraith", "w3string.byId: 2115018037")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018038) == "NoonWraith", "w3string.byId: 2115018038")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018039) == "Troll", "w3string.byId: 2115018039")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018040) == "Hag", "w3string.byId: 2115018040")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018041) == "Harpies", "w3string.byId: 2115018041")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018042) == "Fogling (Foglet)", "w3string.byId: 2115018042")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018043) == "Endrega", "w3string.byId: 2115018043")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018044) == "Ghoul", "w3string.byId: 2115018044")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018045) == "Alghoul", "w3string.byId: 2115018045")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018046) == "Nekkers", "w3string.byId: 2115018046")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018047) == "Drowner", "w3string.byId: 2115018047")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018048) == "Rotfiend", "w3string.byId: 2115018048")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018049) == "Wolf", "w3string.byId: 2115018049")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018050) == "Wraith", "w3string.byId: 2115018050")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018051) == "Spider", "w3string.byId: 2115018051")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018052) == "Boar", "w3string.byId: 2115018052")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018053) == "Higher Vampire", "w3string.byId: 2115018053")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018054) == "Bruxa", "w3string.byId: 2115018054")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018055) == "Fleder", "w3string.byId: 2115018055")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018056) == "Garkain", "w3string.byId: 2115018056")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018057) == "Gravier", "w3string.byId: 2115018057")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018058) == "Giant", "w3string.byId: 2115018058")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018059) == "Skeleton", "w3string.byId: 2115018059")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018060) == "Barghet", "w3string.byId: 2115018060")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018061) == "Echinops", "w3string.byId: 2115018061")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018062) == "Centipede", "w3string.byId: 2115018062")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018063) == "Kikimore", "w3string.byId: 2115018063")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018064) == "Panther", "w3string.byId: 2115018064")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018065) == "Sharley", "w3string.byId: 2115018065")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018066) == "Wight", "w3string.byId: 2115018066")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018067) == "Human", "w3string.byId: 2115018067")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018068) == "Wild Hunt", "w3string.byId: 2115018068")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018069) == "Gryphon", "w3string.byId: 2115018069")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018070) == "Cockatrice", "w3string.byId: 2115018070")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018071) == "Wyvern", "w3string.byId: 2115018071")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018072) == "Forktial", "w3string.byId: 2115018072")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018073) == "Basilisk", "w3string.byId: 2115018073")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018074) == "Katakan", "w3string.byId: 2115018074")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018075) == "Ekimmara", "w3string.byId: 2115018075")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018076) == "Main settings", "w3string.byId: 2115018076")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018077) == "Creatures frequencies", "w3string.byId: 2115018077")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018078) == "Creatures ratios - Day", "w3string.byId: 2115018078")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018079) == "Creatures ratios - Night", "w3string.byId: 2115018079")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018080) == "Enable Geralt comments", "w3string.byId: 2115018080")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018081) == "RandomEncounters Reworked enabled", "w3string.byId: 2115018081")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018082) == "Hide RER notifications", "w3string.byId: 2115018082")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018083) == "Enable encounters loot", "w3string.byId: 2115018083")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018084) == "City spawns", "w3string.byId: 2115018084")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018085) == "No city spawns", "w3string.byId: 2115018085")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018086) == "Allow all", "w3string.byId: 2115018086")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018087) == "No large creatures", "w3string.byId: 2115018087")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018088) == "No small creatures", "w3string.byId: 2115018088")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018089) == "External factors coefficient", "w3string.byId: 2115018089")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018090) == "Monster contract frequency", "w3string.byId: 2115018090")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018091) == "Monster ambush frequency", "w3string.byId: 2115018091")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018092) == "City spawns", "w3string.byId: 2115018092")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018093) == "Encounter types", "w3string.byId: 2115018093")) failed += 1;
    if (!assertTrue(GetLocStringById(2115018094) == "RER initialized", "w3string.byId: 2115018094")) failed += 1;

    // test by key
    if (!assertTrue(GetLocStringByKey("preset_value_rer_defaults") == "Defaults", "w3string.byKey: preset_value_rer_defaults")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_custom_frequency_low_day") == "Minimum delay during the day (in seconds)", "w3string.byKey: option_rer_custom_frequency_low_day")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_custom_frequency_high_day") == "Maximum delay during the day (in seconds)", "w3string.byKey: option_rer_custom_frequency_high_day")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_custom_frequency_low_night") == "Minimum delay during the night (in seconds)", "w3string.byKey: option_rer_custom_frequency_low_night")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_custom_frequency_hight_night") == "Maximum delay during the night (in seconds)", "w3string.byKey: option_rer_custom_frequency_hight_night")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_low") == "Low", "w3string.byKey: preset_value_rer_low")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_medium") == "Medium", "w3string.byKey: preset_value_rer_medium")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_high") == "High", "w3string.byKey: preset_value_rer_high")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_Mods") == "Mods", "w3string.byKey: panel_Mods")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_name") == "Random Encounters Reworked", "w3string.byKey: panel_rer_name")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_main_settings") == "Main settings", "w3string.byKey: panel_rer_main_settings")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_city_spawn") == "Enable city spawns", "w3string.byKey: option_rer_city_spawn")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_select_yes") == "Yes", "w3string.byKey: preset_value_rer_select_yes")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_select_no") == "No", "w3string.byKey: preset_value_rer_select_no")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_difficulty") == "Encounters difficulty (affects mostly enemy count)", "w3string.byKey: option_rer_difficulty")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_easy") == "Easy", "w3string.byKey: preset_value_rer_easy")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_medium") == "Medium", "w3string.byKey: preset_value_rer_medium")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_hard") == "Hard", "w3string.byKey: preset_value_rer_hard")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_monster_hunt_ratio") == "Monster hunt frequency", "w3string.byKey: option_rer_monster_hunt_ratio")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_encounter_type") == "Encounter types", "w3string.byKey: panel_rer_encounter_type")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_creature_frequency") == "Creatures frequencies", "w3string.byKey: panel_rer_creature_frequency")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_creatures_ratios") == "Creatures ratios", "w3string.byKey: panel_rer_creatures_ratios")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_creatures_ratios_day") == "Creatures ratios - Day", "w3string.byKey: panel_rer_creatures_ratios_day")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_creatures_ratios_night") == "Creatures ratios - Night", "w3string.byKey: panel_rer_creatures_ratios_night")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_everything_off") == "Everything OFF", "w3string.byKey: preset_value_rer_everything_off")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_everything_on") == "Everything ON", "w3string.byKey: preset_value_rer_everything_on")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_leshen") == "Leshen", "w3string.byKey: option_rer_leshen")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_werewolf") == "Werewolf", "w3string.byKey: option_rer_werewolf")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_cyclops") == "Cyclop", "w3string.byKey: option_rer_cyclops")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_arachas") == "Arachas", "w3string.byKey: option_rer_arachas")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_fiend") == "Fiend", "w3string.byKey: option_rer_fiend")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_chort") == "Chort", "w3string.byKey: option_rer_chort")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_vampire") == "Vampire", "w3string.byKey: option_rer_vampire")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_bear") == "Bear", "w3string.byKey: option_rer_bear")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_golem") == "Golem", "w3string.byKey: option_rer_golem")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_elemental") == "Elemental", "w3string.byKey: option_rer_elemental")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_nightwraith") == "NightWraith", "w3string.byKey: option_rer_nightwraith")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_noonwraith") == "NoonWraith", "w3string.byKey: option_rer_noonwraith")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_troll") == "Troll", "w3string.byKey: option_rer_troll")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_hag") == "Hag", "w3string.byKey: option_rer_hag")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_harpies") == "Harpies", "w3string.byKey: option_rer_harpies")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_fogling") == "Fogling (Foglet)", "w3string.byKey: option_rer_fogling")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_endrega") == "Endrega", "w3string.byKey: option_rer_endrega")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_ghoul") == "Ghoul", "w3string.byKey: option_rer_ghoul")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_alghoul") == "Alghoul", "w3string.byKey: option_rer_alghoul")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_nekkers") == "Nekkers", "w3string.byKey: option_rer_nekkers")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_drowner") == "Drowner", "w3string.byKey: option_rer_drowner")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_rotfiend") == "Rotfiend", "w3string.byKey: option_rer_rotfiend")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_wolf") == "Wolf", "w3string.byKey: option_rer_wolf")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_wraith") == "Wraith", "w3string.byKey: option_rer_wraith")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_spider") == "Spider", "w3string.byKey: option_rer_spider")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_boars") == "Boar", "w3string.byKey: option_rer_boars")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Higher_Vampire") == "Higher Vampire", "w3string.byKey: option_rer_Higher_Vampire")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Bruxa") == "Bruxa", "w3string.byKey: option_rer_Bruxa")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Fleder") == "Fleder", "w3string.byKey: option_rer_Fleder")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Garkain") == "Garkain", "w3string.byKey: option_rer_Garkain")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_drownerDLC") == "Gravier", "w3string.byKey: option_rer_drownerDLC")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Giant") == "Giant", "w3string.byKey: option_rer_Giant")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Skeleton") == "Skeleton", "w3string.byKey: option_rer_Skeleton")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Barghest") == "Barghet", "w3string.byKey: option_rer_Barghest")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Echinops") == "Echinops", "w3string.byKey: option_rer_Echinops")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Centipede") == "Centipede", "w3string.byKey: option_rer_Centipede")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Kikimore") == "Kikimore", "w3string.byKey: option_rer_Kikimore")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Panther") == "Panther", "w3string.byKey: option_rer_Panther")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Sharley") == "Sharley", "w3string.byKey: option_rer_Sharley")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Wight") == "Wight", "w3string.byKey: option_rer_Wight")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_human_chance") == "Human", "w3string.byKey: option_rer_human_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_wild_chance") == "Wild Hunt", "w3string.byKey: option_rer_wild_chance")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_gryphon") == "Gryphon", "w3string.byKey: option_rer_gryphon")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_cockatrice") == "Cockatrice", "w3string.byKey: option_rer_cockatrice")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Wyvern") == "Wyvern", "w3string.byKey: option_rer_Wyvern")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Forktail") == "Forktial", "w3string.byKey: option_rer_Forktail")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Basilisk") == "Basilisk", "w3string.byKey: option_rer_Basilisk")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Katakan") == "Katakan", "w3string.byKey: option_rer_Katakan")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_Ekimmara") == "Ekimmara", "w3string.byKey: option_rer_Ekimmara")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_main_settings") == "Main settings", "w3string.byKey: preset_Mods_rer_name_rer_main_settings")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_creature_frequency") == "Creatures frequencies", "w3string.byKey: preset_Mods_rer_name_rer_creature_frequency")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_creatures_ratios_day") == "Creatures ratios - Day", "w3string.byKey: preset_Mods_rer_name_rer_creatures_ratios_day")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_creatures_ratios_night") == "Creatures ratios - Night", "w3string.byKey: preset_Mods_rer_name_rer_creatures_ratios_night")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_geralt_comments") == "Enable Geralt comments", "w3string.byKey: option_rer_geralt_comments")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_enabled") == "RandomEncounters Reworked enabled", "w3string.byKey: option_rer_enabled")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_hide_notifications") == "Hide RER notifications", "w3string.byKey: option_rer_hide_notifications")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_enable_encounters_loot") == "Enable encounters loot", "w3string.byKey: option_rer_enable_encounters_loot")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_city_spawns") == "City spawns", "w3string.byKey: preset_Mods_rer_name_rer_city_spawns")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_no_city_spawns") == "No city spawns", "w3string.byKey: preset_value_rer_no_city_spawns")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_all_city_spawns") == "Allow all", "w3string.byKey: preset_value_rer_all_city_spawns")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_no_large_creatures") == "No large creatures", "w3string.byKey: preset_value_rer_no_large_creatures")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_rer_no_small_creatures") == "No small creatures", "w3string.byKey: preset_value_rer_no_small_creatures")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_external_factors_coefficient") == "External factors coefficient", "w3string.byKey: option_rer_external_factors_coefficient")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_monster_contract_ratio") == "Monster contract frequency", "w3string.byKey: option_rer_monster_contract_ratio")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_monster_ambush_ratio") == "Monster ambush frequency", "w3string.byKey: option_rer_monster_ambush_ratio")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_rer_city_spawns") == "City spawns", "w3string.byKey: panel_rer_city_spawns")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_rer_name_rer_encounter_type") == "Encounter types", "w3string.byKey: preset_Mods_rer_name_rer_encounter_type")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_rer_mod_initialized") == "RER initialized", "w3string.byKey: option_rer_mod_initialized")) failed += 1;

    // return number of failed
    return failed;
}

exec function test_verifyW3Strings() {
    logTestResult("Verify W3Strings", _test_verifyW3strings(), true);
}
